Terminals unused in grammar

    DOT
    BOOL
    POW
    COMM


Rules useless in parser due to conflicts

   21 $@8: %empty

   23 $@9: %empty


State 23 conflicts: 1 shift/reduce
State 26 conflicts: 1 reduce/reduce
State 27 conflicts: 1 reduce/reduce
State 34 conflicts: 1 shift/reduce, 1 reduce/reduce
State 51 conflicts: 1 shift/reduce, 1 reduce/reduce
State 56 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce, 1 reduce/reduce
State 97 conflicts: 1 shift/reduce, 1 reduce/reduce
State 104 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce, 1 reduce/reduce
State 118 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce, 1 reduce/reduce
State 123 conflicts: 1 shift/reduce, 1 reduce/reduce
State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body return BRACES_CLOSE

    2 $@1: %empty

    3 headers: INCLUDE $@1 headers
    4        | %empty

    5 main: datatype ID

    6 datatype: INT
    7         | FLOAT
    8         | STRING

    9 $@2: %empty

   10 datatype: PRINT $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

   11 $@3: %empty

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body
   13         | %empty

   14 $@4: %empty

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

   16 $@5: %empty

   17 $@6: %empty

   18 $@7: %empty

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body
   20     | statement DELIM body

   21 $@8: %empty

   22 body: PRINT $@8 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

   23 $@9: %empty

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body
   25     | %empty

   26 $@10: %empty

   27 else: ELSE $@10 BRACES_OPEN body BRACES_CLOSE
   28     | %empty

   29 condition: value relop value condition_optional
   30          | NOT condition
   31          | T
   32          | F
   33          | value

   34 condition_optional: AND condition
   35                   | OR condition
   36                   | %empty

   37 $@11: %empty

   38 statement: datatype ID $@11 init
   39          | ID ASSIGN expression
   40          | ID relop expression

   41 init: ASSIGN expression
   42     | %empty

   43 expression: value arithmetic expression
   44           | value

   45 arithmetic: ADD
   46           | SUB
   47           | MULT
   48           | DIV

   49 relop: LT
   50      | GT
   51      | LE
   52      | GE
   53      | EQ
   54      | NE

   55 value: NUM
   56      | REAL
   57      | SENTENCE
   58      | ID

   59 $@12: %empty

   60 return: RET $@12 expression DELIM


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 12 24
    ',' (44) 12 24
    error (256)
    DOT <nd_obj> (258)
    PRINT <nd_obj> (259) 10 22
    SCAN <nd_obj> (260) 12 24
    INT <nd_obj> (261) 6
    FLOAT <nd_obj> (262) 7
    STRING <nd_obj> (263) 8
    BOOL <nd_obj> (264)
    RET <nd_obj> (265) 60
    FOR <nd_obj> (266) 15
    POW <nd_obj> (267)
    IF <nd_obj> (268) 19
    ELSE <nd_obj> (269) 27
    INCLUDE <nd_obj> (270) 3
    T <nd_obj> (271) 31
    F <nd_obj> (272) 32
    NUM <nd_obj> (273) 55
    REAL <nd_obj> (274) 56
    ID <nd_obj> (275) 5 12 24 38 39 40 58
    LE <nd_obj> (276) 51
    GE <nd_obj> (277) 52
    EQ <nd_obj> (278) 53
    NE <nd_obj> (279) 54
    GT <nd_obj> (280) 50
    LT <nd_obj> (281) 49
    NOT <nd_obj> (282) 30
    AND <nd_obj> (283) 34
    OR <nd_obj> (284) 35
    ADD <nd_obj> (285) 45
    SUB <nd_obj> (286) 46
    DIV <nd_obj> (287) 48
    MULT <nd_obj> (288) 47
    ASSIGN <nd_obj> (289) 39 41
    BRACES_OPEN <nd_obj> (290) 1 15 19 27
    BRACES_CLOSE <nd_obj> (291) 1 15 19 27
    BRACKET_OPEN <nd_obj> (292) 1 10 12 15 19 22 24
    BRACKET_CLOSE <nd_obj> (293) 1 10 12 15 19 22 24
    DELIM <nd_obj> (294) 10 12 15 20 22 24 60
    COMM <nd_obj> (295)
    SENTENCE <nd_obj> (296) 10 12 22 24 57


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <nd_obj> (45)
        on left: 1
        on right: 0
    headers <nd_obj> (46)
        on left: 3 4
        on right: 1 3
    $@1 (47)
        on left: 2
        on right: 3
    main <nd_obj> (48)
        on left: 5
        on right: 1
    datatype <nd_obj> (49)
        on left: 6 7 8 10 12 13
        on right: 5 38
    $@2 (50)
        on left: 9
        on right: 10
    $@3 (51)
        on left: 11
        on right: 12
    body <nd_obj> (52)
        on left: 15 19 20 22 24 25
        on right: 1 10 12 15 19 20 22 24 27
    $@4 (53)
        on left: 14
        on right: 15
    $@5 (54)
        on left: 16
        on right: 19
    $@6 (55)
        on left: 17
        on right: 19
    $@7 (56)
        on left: 18
        on right: 19
    $@8 (57)
        on left: 21
        on right: 22
    $@9 (58)
        on left: 23
        on right: 24
    else <nd_obj> (59)
        on left: 27 28
        on right: 19
    $@10 (60)
        on left: 26
        on right: 27
    condition <nd_obj3> (61)
        on left: 29 30 31 32 33
        on right: 15 19 30 34 35
    condition_optional <nd_obj> (62)
        on left: 34 35 36
        on right: 29
    statement <nd_obj> (63)
        on left: 38 39 40
        on right: 15 20
    $@11 (64)
        on left: 37
        on right: 38
    init <nd_obj2> (65)
        on left: 41 42
        on right: 38
    expression <nd_obj2> (66)
        on left: 43 44
        on right: 39 40 41 43 60
    arithmetic <nd_obj> (67)
        on left: 45 46 47 48
        on right: 43
    relop <nd_obj> (68)
        on left: 49 50 51 52 53 54
        on right: 29 40
    value <nd_obj2> (69)
        on left: 55 56 57 58
        on right: 29 33 43 44
    return <nd_obj> (70)
        on left: 60
        on right: 1
    $@12 (71)
        on left: 59
        on right: 60


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    $default  reduce using rule 4 (headers)

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE • $@1 headers

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: headers • main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body return BRACES_CLOSE

    PRINT   shift, and go to state 6
    SCAN    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10

    $default  reduce using rule 13 (datatype)

    main      go to state 11
    datatype  go to state 12


State 4

    3 headers: INCLUDE $@1 • headers

    INCLUDE  shift, and go to state 1

    $default  reduce using rule 4 (headers)

    headers  go to state 13


State 5

    0 $accept: program $end •

    $default  accept


State 6

   10 datatype: PRINT • $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

    $default  reduce using rule 9 ($@2)

    $@2  go to state 14


State 7

   12 datatype: SCAN • $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    $default  reduce using rule 11 ($@3)

    $@3  go to state 15


State 8

    6 datatype: INT •

    $default  reduce using rule 6 (datatype)


State 9

    7 datatype: FLOAT •

    $default  reduce using rule 7 (datatype)


State 10

    8 datatype: STRING •

    $default  reduce using rule 8 (datatype)


State 11

    1 program: headers main • BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body return BRACES_CLOSE

    BRACKET_OPEN  shift, and go to state 16


State 12

    5 main: datatype • ID

    ID  shift, and go to state 17


State 13

    3 headers: INCLUDE $@1 headers •

    $default  reduce using rule 3 (headers)


State 14

   10 datatype: PRINT $@2 • BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

    BRACKET_OPEN  shift, and go to state 18


State 15

   12 datatype: SCAN $@3 • BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    BRACKET_OPEN  shift, and go to state 19


State 16

    1 program: headers main BRACKET_OPEN • BRACKET_CLOSE BRACES_OPEN body return BRACES_CLOSE

    BRACKET_CLOSE  shift, and go to state 20


State 17

    5 main: datatype ID •

    $default  reduce using rule 5 (main)


State 18

   10 datatype: PRINT $@2 BRACKET_OPEN • SENTENCE BRACKET_CLOSE DELIM body

    SENTENCE  shift, and go to state 21


State 19

   12 datatype: SCAN $@3 BRACKET_OPEN • SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    SENTENCE  shift, and go to state 22


State 20

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE • BRACES_OPEN body return BRACES_CLOSE

    BRACES_OPEN  shift, and go to state 23


State 21

   10 datatype: PRINT $@2 BRACKET_OPEN SENTENCE • BRACKET_CLOSE DELIM body

    BRACKET_CLOSE  shift, and go to state 24


State 22

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE • ',' '&' ID BRACKET_CLOSE DELIM body

    ','  shift, and go to state 25


State 23

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN • body return BRACES_CLOSE

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 32
    statement  go to state 33


State 24

   10 datatype: PRINT $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE • DELIM body

    DELIM  shift, and go to state 34


State 25

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' • '&' ID BRACKET_CLOSE DELIM body

    '&'  shift, and go to state 35


State 26

   10 datatype: PRINT • $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body
   22 body: PRINT • $@8 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

    BRACKET_OPEN  reduce using rule 9 ($@2)
    BRACKET_OPEN  [reduce using rule 21 ($@8)]
    $default      reduce using rule 9 ($@2)

    $@2  go to state 14
    $@8  go to state 36


State 27

   12 datatype: SCAN • $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body
   24 body: SCAN • $@9 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    BRACKET_OPEN  reduce using rule 11 ($@3)
    BRACKET_OPEN  [reduce using rule 23 ($@9)]
    $default      reduce using rule 11 ($@3)

    $@3  go to state 15
    $@9  go to state 37


State 28

   15 body: FOR • $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    $default  reduce using rule 14 ($@4)

    $@4  go to state 38


State 29

   19 body: IF • $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body

    $default  reduce using rule 16 ($@5)

    $@5  go to state 39


State 30

   39 statement: ID • ASSIGN expression
   40          | ID • relop expression

    LE      shift, and go to state 40
    GE      shift, and go to state 41
    EQ      shift, and go to state 42
    NE      shift, and go to state 43
    GT      shift, and go to state 44
    LT      shift, and go to state 45
    ASSIGN  shift, and go to state 46

    relop  go to state 47


State 31

   38 statement: datatype • ID $@11 init

    ID  shift, and go to state 48


State 32

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body • return BRACES_CLOSE

    RET  shift, and go to state 49

    return  go to state 50


State 33

   20 body: statement • DELIM body

    DELIM  shift, and go to state 51


State 34

   10 datatype: PRINT $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID  [reduce using rule 13 (datatype)]
    ID  [reduce using rule 25 (body)]

    datatype   go to state 31
    body       go to state 52
    statement  go to state 33


State 35

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' • ID BRACKET_CLOSE DELIM body

    ID  shift, and go to state 53


State 36

   22 body: PRINT $@8 • BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body

    BRACKET_OPEN  shift, and go to state 54


State 37

   24 body: SCAN $@9 • BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    BRACKET_OPEN  shift, and go to state 55


State 38

   15 body: FOR $@4 • BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    BRACKET_OPEN  shift, and go to state 56


State 39

   19 body: IF $@5 • BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body

    BRACKET_OPEN  shift, and go to state 57


State 40

   51 relop: LE •

    $default  reduce using rule 51 (relop)


State 41

   52 relop: GE •

    $default  reduce using rule 52 (relop)


State 42

   53 relop: EQ •

    $default  reduce using rule 53 (relop)


State 43

   54 relop: NE •

    $default  reduce using rule 54 (relop)


State 44

   50 relop: GT •

    $default  reduce using rule 50 (relop)


State 45

   49 relop: LT •

    $default  reduce using rule 49 (relop)


State 46

   39 statement: ID ASSIGN • expression

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    expression  go to state 62
    value       go to state 63


State 47

   40 statement: ID relop • expression

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    expression  go to state 64
    value       go to state 63


State 48

   38 statement: datatype ID • $@11 init

    $default  reduce using rule 37 ($@11)

    $@11  go to state 65


State 49

   60 return: RET • $@12 expression DELIM

    $default  reduce using rule 59 ($@12)

    $@12  go to state 66


State 50

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body return • BRACES_CLOSE

    BRACES_CLOSE  shift, and go to state 67


State 51

   20 body: statement DELIM • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    ID        [reduce using rule 25 (body)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 68
    statement  go to state 33


State 52

   10 datatype: PRINT $@2 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body •

    $default  reduce using rule 10 (datatype)


State 53

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' ID • BRACKET_CLOSE DELIM body

    BRACKET_CLOSE  shift, and go to state 69


State 54

   22 body: PRINT $@8 BRACKET_OPEN • SENTENCE BRACKET_CLOSE DELIM body

    SENTENCE  shift, and go to state 70


State 55

   24 body: SCAN $@9 BRACKET_OPEN • SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body

    SENTENCE  shift, and go to state 71


State 56

   15 body: FOR $@4 BRACKET_OPEN • statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    PRINT   shift, and go to state 6
    SCAN    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    ID      shift, and go to state 30

    ID  [reduce using rule 13 (datatype)]

    datatype   go to state 31
    statement  go to state 72


State 57

   19 body: IF $@5 BRACKET_OPEN • condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body

    T         shift, and go to state 73
    F         shift, and go to state 74
    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    NOT       shift, and go to state 75
    SENTENCE  shift, and go to state 61

    condition  go to state 76
    value      go to state 77


State 58

   55 value: NUM •

    $default  reduce using rule 55 (value)


State 59

   56 value: REAL •

    $default  reduce using rule 56 (value)


State 60

   58 value: ID •

    $default  reduce using rule 58 (value)


State 61

   57 value: SENTENCE •

    $default  reduce using rule 57 (value)


State 62

   39 statement: ID ASSIGN expression •

    $default  reduce using rule 39 (statement)


State 63

   43 expression: value • arithmetic expression
   44           | value •

    ADD   shift, and go to state 78
    SUB   shift, and go to state 79
    DIV   shift, and go to state 80
    MULT  shift, and go to state 81

    $default  reduce using rule 44 (expression)

    arithmetic  go to state 82


State 64

   40 statement: ID relop expression •

    $default  reduce using rule 40 (statement)


State 65

   38 statement: datatype ID $@11 • init

    ASSIGN  shift, and go to state 83

    $default  reduce using rule 42 (init)

    init  go to state 84


State 66

   60 return: RET $@12 • expression DELIM

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    expression  go to state 85
    value       go to state 63


State 67

    1 program: headers main BRACKET_OPEN BRACKET_CLOSE BRACES_OPEN body return BRACES_CLOSE •

    $default  reduce using rule 1 (program)


State 68

   20 body: statement DELIM body •

    $default  reduce using rule 20 (body)


State 69

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE • DELIM body

    DELIM  shift, and go to state 86


State 70

   22 body: PRINT $@8 BRACKET_OPEN SENTENCE • BRACKET_CLOSE DELIM body

    BRACKET_CLOSE  shift, and go to state 87


State 71

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE • ',' '&' ID BRACKET_CLOSE DELIM body

    ','  shift, and go to state 88


State 72

   15 body: FOR $@4 BRACKET_OPEN statement • DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    DELIM  shift, and go to state 89


State 73

   31 condition: T •

    $default  reduce using rule 31 (condition)


State 74

   32 condition: F •

    $default  reduce using rule 32 (condition)


State 75

   30 condition: NOT • condition

    T         shift, and go to state 73
    F         shift, and go to state 74
    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    NOT       shift, and go to state 75
    SENTENCE  shift, and go to state 61

    condition  go to state 90
    value      go to state 77


State 76

   19 body: IF $@5 BRACKET_OPEN condition • BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body

    BRACKET_CLOSE  shift, and go to state 91


State 77

   29 condition: value • relop value condition_optional
   33          | value •

    LE  shift, and go to state 40
    GE  shift, and go to state 41
    EQ  shift, and go to state 42
    NE  shift, and go to state 43
    GT  shift, and go to state 44
    LT  shift, and go to state 45

    $default  reduce using rule 33 (condition)

    relop  go to state 92


State 78

   45 arithmetic: ADD •

    $default  reduce using rule 45 (arithmetic)


State 79

   46 arithmetic: SUB •

    $default  reduce using rule 46 (arithmetic)


State 80

   48 arithmetic: DIV •

    $default  reduce using rule 48 (arithmetic)


State 81

   47 arithmetic: MULT •

    $default  reduce using rule 47 (arithmetic)


State 82

   43 expression: value arithmetic • expression

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    expression  go to state 93
    value       go to state 63


State 83

   41 init: ASSIGN • expression

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    expression  go to state 94
    value       go to state 63


State 84

   38 statement: datatype ID $@11 init •

    $default  reduce using rule 38 (statement)


State 85

   60 return: RET $@12 expression • DELIM

    DELIM  shift, and go to state 95


State 86

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID  [reduce using rule 13 (datatype)]
    ID  [reduce using rule 25 (body)]

    datatype   go to state 31
    body       go to state 96
    statement  go to state 33


State 87

   22 body: PRINT $@8 BRACKET_OPEN SENTENCE BRACKET_CLOSE • DELIM body

    DELIM  shift, and go to state 97


State 88

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' • '&' ID BRACKET_CLOSE DELIM body

    '&'  shift, and go to state 98


State 89

   15 body: FOR $@4 BRACKET_OPEN statement DELIM • condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    T         shift, and go to state 73
    F         shift, and go to state 74
    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    NOT       shift, and go to state 75
    SENTENCE  shift, and go to state 61

    condition  go to state 99
    value      go to state 77


State 90

   30 condition: NOT condition •

    $default  reduce using rule 30 (condition)


State 91

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE • $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body

    $default  reduce using rule 17 ($@6)

    $@6  go to state 100


State 92

   29 condition: value relop • value condition_optional

    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    SENTENCE  shift, and go to state 61

    value  go to state 101


State 93

   43 expression: value arithmetic expression •

    $default  reduce using rule 43 (expression)


State 94

   41 init: ASSIGN expression •

    $default  reduce using rule 41 (init)


State 95

   60 return: RET $@12 expression DELIM •

    $default  reduce using rule 60 (return)


State 96

   12 datatype: SCAN $@3 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body •

    $default  reduce using rule 12 (datatype)


State 97

   22 body: PRINT $@8 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    ID        [reduce using rule 25 (body)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 102
    statement  go to state 33


State 98

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' • ID BRACKET_CLOSE DELIM body

    ID  shift, and go to state 103


State 99

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition • DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    DELIM  shift, and go to state 104


State 100

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 • BRACES_OPEN body BRACES_CLOSE $@7 else body

    BRACES_OPEN  shift, and go to state 105


State 101

   29 condition: value relop value • condition_optional

    AND  shift, and go to state 106
    OR   shift, and go to state 107

    $default  reduce using rule 36 (condition_optional)

    condition_optional  go to state 108


State 102

   22 body: PRINT $@8 BRACKET_OPEN SENTENCE BRACKET_CLOSE DELIM body •

    $default  reduce using rule 22 (body)


State 103

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' ID • BRACKET_CLOSE DELIM body

    BRACKET_CLOSE  shift, and go to state 109


State 104

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM • statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    PRINT   shift, and go to state 6
    SCAN    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    ID      shift, and go to state 30

    ID  [reduce using rule 13 (datatype)]

    datatype   go to state 31
    statement  go to state 110


State 105

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN • body BRACES_CLOSE $@7 else body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 111
    statement  go to state 33


State 106

   34 condition_optional: AND • condition

    T         shift, and go to state 73
    F         shift, and go to state 74
    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    NOT       shift, and go to state 75
    SENTENCE  shift, and go to state 61

    condition  go to state 112
    value      go to state 77


State 107

   35 condition_optional: OR • condition

    T         shift, and go to state 73
    F         shift, and go to state 74
    NUM       shift, and go to state 58
    REAL      shift, and go to state 59
    ID        shift, and go to state 60
    NOT       shift, and go to state 75
    SENTENCE  shift, and go to state 61

    condition  go to state 113
    value      go to state 77


State 108

   29 condition: value relop value condition_optional •

    $default  reduce using rule 29 (condition)


State 109

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE • DELIM body

    DELIM  shift, and go to state 114


State 110

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement • BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body

    BRACKET_CLOSE  shift, and go to state 115


State 111

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body • BRACES_CLOSE $@7 else body

    BRACES_CLOSE  shift, and go to state 116


State 112

   34 condition_optional: AND condition •

    $default  reduce using rule 34 (condition_optional)


State 113

   35 condition_optional: OR condition •

    $default  reduce using rule 35 (condition_optional)


State 114

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    ID        [reduce using rule 25 (body)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 117
    statement  go to state 33


State 115

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE • BRACES_OPEN body BRACES_CLOSE body

    BRACES_OPEN  shift, and go to state 118


State 116

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE • $@7 else body

    $default  reduce using rule 18 ($@7)

    $@7  go to state 119


State 117

   24 body: SCAN $@9 BRACKET_OPEN SENTENCE ',' '&' ID BRACKET_CLOSE DELIM body •

    $default  reduce using rule 24 (body)


State 118

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN • body BRACES_CLOSE body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 120
    statement  go to state 33


State 119

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 • else body

    ELSE  shift, and go to state 121

    $default  reduce using rule 28 (else)

    else  go to state 122


State 120

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body • BRACES_CLOSE body

    BRACES_CLOSE  shift, and go to state 123


State 121

   27 else: ELSE • $@10 BRACES_OPEN body BRACES_CLOSE

    $default  reduce using rule 26 ($@10)

    $@10  go to state 124


State 122

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    ID        [reduce using rule 25 (body)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 125
    statement  go to state 33


State 123

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE • body

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    ID        [reduce using rule 25 (body)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 126
    statement  go to state 33


State 124

   27 else: ELSE $@10 • BRACES_OPEN body BRACES_CLOSE

    BRACES_OPEN  shift, and go to state 127


State 125

   19 body: IF $@5 BRACKET_OPEN condition BRACKET_CLOSE $@6 BRACES_OPEN body BRACES_CLOSE $@7 else body •

    $default  reduce using rule 19 (body)


State 126

   15 body: FOR $@4 BRACKET_OPEN statement DELIM condition DELIM statement BRACKET_CLOSE BRACES_OPEN body BRACES_CLOSE body •

    $default  reduce using rule 15 (body)


State 127

   27 else: ELSE $@10 BRACES_OPEN • body BRACES_CLOSE

    PRINT   shift, and go to state 26
    SCAN    shift, and go to state 27
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRING  shift, and go to state 10
    FOR     shift, and go to state 28
    IF      shift, and go to state 29
    ID      shift, and go to state 30

    ID        [reduce using rule 13 (datatype)]
    $default  reduce using rule 25 (body)

    datatype   go to state 31
    body       go to state 128
    statement  go to state 33


State 128

   27 else: ELSE $@10 BRACES_OPEN body • BRACES_CLOSE

    BRACES_CLOSE  shift, and go to state 129


State 129

   27 else: ELSE $@10 BRACES_OPEN body BRACES_CLOSE •

    $default  reduce using rule 27 (else)
